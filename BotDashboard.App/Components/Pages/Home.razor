@page "/"
@using BotDashboard.App.Constants
@using MudBlazor

<PageTitle>Dashboard</PageTitle>

<div class="container-fluid logo-container text-white d-flex align-items-center justify-content-center">
    <img src="imgs/Bot Harbor - Logo Resized.png" alt="Bot Harbor Logo" class="img-fluid"/>
</div>

<h2 class="text-white mt-4 fw-bold">
    <i class="bi bi-box-seam"></i>
    Containers Running
</h2>
<div class="row gy-2">
    @if (Containers.Count == 0)
    {
        <p class="text-white">There are no containers currently running...</p>
    }
    @foreach (var container in Containers.OrderBy(x => x.Image))
    {
        <div class="col-md-4 mb-4">
            <div class="card container-card">
                <div class="position-relative">
                    <div class="bg-image hover-overlay ripple" data-mdb-ripple-color="light">
                        <div class="mt-2 ms-3">
                            <img src="https://www.svgviewer.dev/static-svgs/13822/discord-icon.svg"
                                 width="50" height="50" alt="@container.Image"/>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title fw-bold">
                            @container.Image.Replace("kalebg08/", "").ToUpper()
                        </h5>
                        <p class="card-text text-white mt-4" style="color: #8893AC">Container Id: @container.ContainerId</p>
                        <p class="card-text text-white" style="color: #8893AC">Created: @container.Created</p>
                        <p class="card-text text-white" style="color: #8893AC">Status: @container.Status</p>
                    </div>
                </div>
                <div class="position-absolute restart-icon-position">
                    <i class="bi bi-arrow-counterclockwise restart-icon" @onclick="() => RestartContainer(container.ContainerId)" style="color: #1EC8A5"></i>
                </div>
                <div class="form-check form-switch position-absolute form-check-position">
                    <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" @onclick="() => StopContainer(container.ContainerId)" checked>
                </div>
            </div>
        </div>
    }
</div>
<p class="text-white">Last Fetched: @ContainerFetchTime</p>

<hr class="text-white"/>

<div class="row gy-3 mb-4">
    <div class="col-md-6">
        <h2 class="text-white fw-bold"><i class="bi bi-command"></i> Commands</h2>
        <div class="card main-site-card">
            <div class="position-relative">
                <div class="bg-image hover-overlay ripple" data-mdb-ripple-color="light">
                    <div class="mt-4 ms-3 text-center">
                        <img src="imgs/1024px-DigitalOcean_logo.svg.png"
                             width="128" height="128" alt="Discord Logo"/>
                    </div>
                </div>
                <div class="card-body text-center">
                    <h2 class="card-title font-weight-bold">
                        Commands
                    </h2>
                    <div class="container justify-content-center">
                        <div class="row">
                            <div class="col-md-12">
                                <MudButtonGroup Class="d-flex justify-content-center gap-2" Color="Color.Primary" Size="Size.Large" Variant="Variant.Outlined">
                                    <MudButton Class="text-white" OnClick="StopAllContainers">Stop All Containers</MudButton>
                                    <MudButton Class="text-white" OnClick="RestartAllContainers">Restart All Containers</MudButton>
                                    <MudButton Class="text-white" OnClick="ListContainers">List All Containers</MudButton>
                                    <MudButton Class="text-white" OnClick="ListMemoryUsagePercentage">Memory Usage</MudButton>
                                </MudButtonGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 mt-2 mb-4">
                                <MudButtonGroup Class="d-flex justify-content-center gap-2" Color="Color.Tertiary" Size="Size.Large" Variant="Variant.Outlined">
                                    <MudButton Class="text-white" OnClick="() => RunImage(DockerRepository.JokeBot)">Start JokeBot</MudButton>
                                    <MudButton Class="text-white" OnClick="() => RunImage(DockerRepository.TriviaBot)">Start TriviaBot</MudButton>
                                    <MudButton Class="text-white" OnClick="() => RunImage(DockerRepository.FactBot)">Start FactBot</MudButton>
                                    <MudButton Class="text-white" OnClick="() => RunImage(DockerRepository.PremBot)">Start PremBot</MudButton>
                                    <MudButton Class="text-white" OnClick="() => RunImage(DockerRepository.JamJunction)">Start JamJunction</MudButton>
                                </MudButtonGroup>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <h2 class="text-white fw-bold"><i class="bi bi-memory"></i> Droplet Memory Usage</h2>
        <div class="card main-site-card">
            <div class="position-relative">
                <div class="card-body m-1">
                    <div>
                        <MudChart ChartType="ChartType.Donut" Width="255px" Height="253px" InputData="@Data" InputLabels="@Labels">
                            <CustomGraphics>
                                <text class="donut-inner-text" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="white" font-family="Helvetica" font-size="3">@Math.Round(MemoryUsagePercentage)% / 100%</text>
                            </CustomGraphics>
                        </MudChart>
                        <p class="text-white text-center">Last Fetched: @MemoryFetchTime</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>